name: Continuous Integration

on:
  # pull_request:
  #   types: [opened, reopened, synchronize]
  workflow_dispatch:

permissions:
  contents: write
jobs:
  test-backend:
    uses: ./.github/workflows/test-backend.yml

  test-frontend:
    uses: ./.github/workflows/test-frontend.yml

  all-tests:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    steps:
      - name: Checkout (needed for coverage history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed to interact with other branches

      - name: Set up Git config
        run: |
          git config --global user.email "github-actions@users.noreply.github.com"
          git config --global user.name "github-actions"
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch workflow-state branch if it exists
        run: |
          git fetch origin workflow-state || echo "No state branch yet"

      - name: Load existing state.json if available
        run: |
          if git show origin/workflow-state:state.json > /dev/null 2>&1; then
            git checkout -b workflow-state origin/workflow-state
            echo "State loaded:"
            cat $GITHUB_WORKSPACE/state.json
          else
            echo "{}" > $GITHUB_WORKSPACE/state.json
            echo "No previous state. Using empty object."
            git checkout -b workflow-state
          fi

      - name: Compare coverage
        id: compare
        run: |
          set -e

          # Current values
          console_app=${{needs.test-backend.outputs.console-app-coverage-percent}}
          services=${{needs.test-backend.outputs.services-coverage-percent}}
          frontend=${{needs.test-frontend.outputs.frontend-coverage-percent}}

          echo "Current coverage: consoleApp=$console_app, services=$services, frontend=$frontend"

          if [ -f $GITHUB_WORKSPACE/state.json ]; then
            prev_console=$(jq .consoleApp $GITHUB_WORKSPACE/state.json)
            prev_services=$(jq .services $GITHUB_WORKSPACE/state.json)
            prev_frontend=$(jq .frontend $GITHUB_WORKSPACE/state.json)

            echo "Previous coverage: consoleApp=$prev_console, services=$prev_services, frontend=$prev_frontend"

            if [ "$console_app" -lt "$prev_console" ]; then
              echo "❌ Console App coverage decreased! ($console_app < $prev_console)"
              exit 1
            fi

            if [ "$services" -lt "$prev_services" ]; then
              echo "❌ Services coverage decreased! ($services < $prev_services)"
              exit 1
            fi

            if [ "$frontend" -lt "$prev_frontend" ]; then
              echo "❌ Frontend coverage decreased! ($frontend < $prev_frontend)"
              exit 1
            fi
          else
            echo "No previous coverage.json found, skipping comparison."
          fi

      - name: Save current coverage to JSON
        run: |
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          jq --argjson consoleApp ${{needs.test-backend.outputs.console-app-coverage-percent}} \
            --argjson services ${{needs.test-backend.outputs.services-coverage-percent}} \
            --argjson frontend ${{needs.test-frontend.outputs.frontend-coverage-percent}} \
            --arg lastRun "$TIMESTAMP" \
            '.consoleApp = $consoleApp |
              .services = $services |
              .frontend = $frontend |
              .lastRun = $lastRun' \
            $GITHUB_WORKSPACE/state.json > new_state.json

          mv new_state.json state.json
          cat state.json

      - name: Commit and push updated state.json
        run: |
          git add state.json
          git commit -m "Update state on ${{ github.run_id }}" || echo "No changes to commit"
          git push origin workflow-state
