# This workflow executes GitVersion and outputs version information that can be used in other workflows.
# It can also be executed manually if you want to see what version a current branch is producing-
# look in the "Run GitVersion" step output of the "gitversion" job to see the complete info that
# GitVersion produces, or look in the "Complete Job" step at the end to see the values being made
# available to other workflows.
name: Run GitVersion

on:
  workflow_dispatch:
  workflow_call:
    outputs:
      semVer:
        description: "The calculated SemVer"
        value: ${{ jobs.gitversion.outputs.semVer }}
      preReleaseLabel:
        description: "The pre-release label (if any)"
        value: ${{ jobs.gitversion.outputs.preReleaseLabel }}

jobs:

  gitversion:
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ env.ACT && steps.gitversion_act.outputs.semVer || steps.gitversion_ci.outputs.semVer }}
      preReleaseLabel: ${{ env.ACT && steps.gitversion_act.outputs.preReleaseLabel || steps.gitversion_ci.outputs.preReleaseLabel }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Use official GitVersion actions when NOT running in act
      - name: Install GitVersion
        if: ${{ !env.ACT }}
        uses: gittools/actions/gitversion/setup@v3.2.1
        with:
          versionSpec: '6.3.x'

      - name: Run GitVersion
        if: ${{ !env.ACT }}
        id: gitversion_ci
        uses: gittools/actions/gitversion/execute@v3.2.1

      # Fallback for local `act` runs
      - name: Setup .NET
        if: ${{ env.ACT }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install and Run GitVersion
        if: ${{ env.ACT }}
        id: gitversion_act
        run: |
          dotnet tool install --global GitVersion.Tool --version 6.3.0
          export PATH="$PATH:$HOME/.dotnet/tools"
          dotnet-gitversion /showConfig
          dotnet-gitversion /output json | tee gitversion.json
          semVer=$(jq -r .SemVer gitversion.json)
          echo "semVer=$semVer" >> $GITHUB_OUTPUT
          preReleaseLabel=$(jq -r .PreReleaseLabel gitversion.json)
          echo "preReleaseLabel=$preReleaseLabel" >> $GITHUB_OUTPUT


